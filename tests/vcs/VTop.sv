// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifdef RANDOMIZE_REG_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_REG_INIT
`ifdef RANDOMIZE_MEM_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_MEM_INIT

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifdef ASSERT_VERBOSE_COND
  `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
`else  // ASSERT_VERBOSE_COND
  `define ASSERT_VERBOSE_COND_ 1
`endif // ASSERT_VERBOSE_COND

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifdef STOP_COND
  `define STOP_COND_ (`STOP_COND)
`else  // STOP_COND
  `define STOP_COND_ 1
`endif // STOP_COND

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifdef RANDOMIZE
  `ifdef VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
  `else  // VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
  `endif // VERILATOR
`else  // RANDOMIZE
  `define INIT_RANDOM_PROLOG_
`endif // RANDOMIZE

module VTop(	// <stdin>:100550:10
  input clock,
        reset);

  wire        _r_req_valid;	// Cosimtop.scala:20:17
  wire [31:0] _r_req_bits_inst;	// Cosimtop.scala:20:17
  wire [31:0] _r_req_bits_src1Data;	// Cosimtop.scala:20:17
  wire [31:0] _r_req_bits_src2Data;	// Cosimtop.scala:20:17
  wire [9:0]  _r_csrInterface_vl;	// Cosimtop.scala:20:17
  wire [9:0]  _r_csrInterface_vStart;	// Cosimtop.scala:20:17
  wire [2:0]  _r_csrInterface_vlmul;	// Cosimtop.scala:20:17
  wire [1:0]  _r_csrInterface_vSew;	// Cosimtop.scala:20:17
  wire [1:0]  _r_csrInterface_vxrm;	// Cosimtop.scala:20:17
  wire        _r_csrInterface_vta;	// Cosimtop.scala:20:17
  wire        _r_csrInterface_vma;	// Cosimtop.scala:20:17
  wire        _r_csrInterface_ignoreException;	// Cosimtop.scala:20:17
  wire        _r_storeBufferClear;	// Cosimtop.scala:20:17
  wire        _r_tlPort_0_d_valid;	// Cosimtop.scala:20:17
  wire [2:0]  _r_tlPort_0_d_bits_opcode;	// Cosimtop.scala:20:17
  wire [2:0]  _r_tlPort_0_d_bits_param;	// Cosimtop.scala:20:17
  wire [1:0]  _r_tlPort_0_d_bits_size;	// Cosimtop.scala:20:17
  wire [9:0]  _r_tlPort_0_d_bits_source;	// Cosimtop.scala:20:17
  wire [9:0]  _r_tlPort_0_d_bits_sink;	// Cosimtop.scala:20:17
  wire        _r_tlPort_0_d_bits_denied;	// Cosimtop.scala:20:17
  wire [31:0] _r_tlPort_0_d_bits_data;	// Cosimtop.scala:20:17
  wire        _r_tlPort_0_d_bits_corrupt;	// Cosimtop.scala:20:17
  wire        _r_tlPort_0_a_ready;	// Cosimtop.scala:20:17
  wire        _r_tlPort_1_d_valid;	// Cosimtop.scala:20:17
  wire [2:0]  _r_tlPort_1_d_bits_opcode;	// Cosimtop.scala:20:17
  wire [2:0]  _r_tlPort_1_d_bits_param;	// Cosimtop.scala:20:17
  wire [1:0]  _r_tlPort_1_d_bits_size;	// Cosimtop.scala:20:17
  wire [9:0]  _r_tlPort_1_d_bits_source;	// Cosimtop.scala:20:17
  wire [9:0]  _r_tlPort_1_d_bits_sink;	// Cosimtop.scala:20:17
  wire        _r_tlPort_1_d_bits_denied;	// Cosimtop.scala:20:17
  wire [31:0] _r_tlPort_1_d_bits_data;	// Cosimtop.scala:20:17
  wire        _r_tlPort_1_d_bits_corrupt;	// Cosimtop.scala:20:17
  wire        _r_tlPort_1_a_ready;	// Cosimtop.scala:20:17
  wire        _v_req_ready;	// Cosimtop.scala:19:17
  wire        _v_resp_valid;	// Cosimtop.scala:19:17
  wire        _v_tlPort_0_d_ready;	// Cosimtop.scala:19:17
  wire        _v_tlPort_0_a_valid;	// Cosimtop.scala:19:17
  wire [2:0]  _v_tlPort_0_a_bits_opcode;	// Cosimtop.scala:19:17
  wire [1:0]  _v_tlPort_0_a_bits_size;	// Cosimtop.scala:19:17
  wire [9:0]  _v_tlPort_0_a_bits_source;	// Cosimtop.scala:19:17
  wire [31:0] _v_tlPort_0_a_bits_address;	// Cosimtop.scala:19:17
  wire [3:0]  _v_tlPort_0_a_bits_mask;	// Cosimtop.scala:19:17
  wire [31:0] _v_tlPort_0_a_bits_data;	// Cosimtop.scala:19:17
  wire        _v_tlPort_1_d_ready;	// Cosimtop.scala:19:17
  wire        _v_tlPort_1_a_valid;	// Cosimtop.scala:19:17
  wire [2:0]  _v_tlPort_1_a_bits_opcode;	// Cosimtop.scala:19:17
  wire [1:0]  _v_tlPort_1_a_bits_size;	// Cosimtop.scala:19:17
  wire [9:0]  _v_tlPort_1_a_bits_source;	// Cosimtop.scala:19:17
  wire [31:0] _v_tlPort_1_a_bits_address;	// Cosimtop.scala:19:17
  wire [3:0]  _v_tlPort_1_a_bits_mask;	// Cosimtop.scala:19:17
  wire [31:0] _v_tlPort_1_a_bits_data;	// Cosimtop.scala:19:17
  V v (	// Cosimtop.scala:19:17
    .clock                   (clock),
    .reset                   (reset),
    .req_valid               (_r_req_valid),	// Cosimtop.scala:20:17
    .req_bits_inst           (_r_req_bits_inst),	// Cosimtop.scala:20:17
    .req_bits_src1Data       (_r_req_bits_src1Data),	// Cosimtop.scala:20:17
    .req_bits_src2Data       (_r_req_bits_src2Data),	// Cosimtop.scala:20:17
    .csrInterface_vl         (_r_csrInterface_vl),	// Cosimtop.scala:20:17
    .csrInterface_vStart     (_r_csrInterface_vStart),	// Cosimtop.scala:20:17
    .csrInterface_vlmul      (_r_csrInterface_vlmul),	// Cosimtop.scala:20:17
    .csrInterface_vSew       (_r_csrInterface_vSew),	// Cosimtop.scala:20:17
    .csrInterface_vxrm       (_r_csrInterface_vxrm),	// Cosimtop.scala:20:17
    .tlPort_0_d_valid        (_r_tlPort_0_d_valid),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_opcode  (_r_tlPort_0_d_bits_opcode),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_param   (_r_tlPort_0_d_bits_param),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_size    (_r_tlPort_0_d_bits_size),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_source  (_r_tlPort_0_d_bits_source),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_sink    (_r_tlPort_0_d_bits_sink),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_denied  (_r_tlPort_0_d_bits_denied),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_data    (_r_tlPort_0_d_bits_data),	// Cosimtop.scala:20:17
    .tlPort_0_d_bits_corrupt (_r_tlPort_0_d_bits_corrupt),	// Cosimtop.scala:20:17
    .tlPort_0_a_ready        (_r_tlPort_0_a_ready),	// Cosimtop.scala:20:17
    .tlPort_1_d_valid        (_r_tlPort_1_d_valid),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_opcode  (_r_tlPort_1_d_bits_opcode),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_param   (_r_tlPort_1_d_bits_param),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_size    (_r_tlPort_1_d_bits_size),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_source  (_r_tlPort_1_d_bits_source),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_sink    (_r_tlPort_1_d_bits_sink),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_denied  (_r_tlPort_1_d_bits_denied),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_data    (_r_tlPort_1_d_bits_data),	// Cosimtop.scala:20:17
    .tlPort_1_d_bits_corrupt (_r_tlPort_1_d_bits_corrupt),	// Cosimtop.scala:20:17
    .tlPort_1_a_ready        (_r_tlPort_1_a_ready),	// Cosimtop.scala:20:17
    .req_ready               (_v_req_ready),
    .resp_valid              (_v_resp_valid),
    .tlPort_0_d_ready        (_v_tlPort_0_d_ready),
    .tlPort_0_a_valid        (_v_tlPort_0_a_valid),
    .tlPort_0_a_bits_opcode  (_v_tlPort_0_a_bits_opcode),
    .tlPort_0_a_bits_size    (_v_tlPort_0_a_bits_size),
    .tlPort_0_a_bits_source  (_v_tlPort_0_a_bits_source),
    .tlPort_0_a_bits_address (_v_tlPort_0_a_bits_address),
    .tlPort_0_a_bits_mask    (_v_tlPort_0_a_bits_mask),
    .tlPort_0_a_bits_data    (_v_tlPort_0_a_bits_data),
    .tlPort_1_d_ready        (_v_tlPort_1_d_ready),
    .tlPort_1_a_valid        (_v_tlPort_1_a_valid),
    .tlPort_1_a_bits_opcode  (_v_tlPort_1_a_bits_opcode),
    .tlPort_1_a_bits_size    (_v_tlPort_1_a_bits_size),
    .tlPort_1_a_bits_source  (_v_tlPort_1_a_bits_source),
    .tlPort_1_a_bits_address (_v_tlPort_1_a_bits_address),
    .tlPort_1_a_bits_mask    (_v_tlPort_1_a_bits_mask),
    .tlPort_1_a_bits_data    (_v_tlPort_1_a_bits_data),
    .csrInterface_vta        (_r_csrInterface_vta),
    .csrInterface_vma        (_r_csrInterface_vma),
    .csrInterface_ignoreException (_r_csrInterface_ignoreException),
    .storeBufferClear        (_r_storeBufferClear)
    // output port 'resp_bits_data' is not connected,
    // output port 'tlPort_0_a_bits_param' is not connected,
    // output port 'tlPort_0_a_bits_corrupt' is not connected,
    // output port 'tlPort_1_a_bits_param' is not connected,
    // output port 'tlPort_1_a_bits_corrupt' is not connected.
  );
  RefModel r (	// Cosimtop.scala:20:17
    .clock                        (clock),
    .reset                        (reset),
    .req_ready                    (_v_req_ready),	// Cosimtop.scala:19:17
    .resp_valid                   (_v_resp_valid),	// Cosimtop.scala:19:17
    .resp_bits_data               (32'h0),	// Cosimtop.scala:20:17
    .tlPort_0_d_ready             (_v_tlPort_0_d_ready),	// Cosimtop.scala:19:17
    .tlPort_0_a_valid             (_v_tlPort_0_a_valid),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_opcode       (_v_tlPort_0_a_bits_opcode),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_param        (3'h0),	// Cosimtop.scala:20:17
    .tlPort_0_a_bits_size         (_v_tlPort_0_a_bits_size),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_source       (_v_tlPort_0_a_bits_source),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_address      (_v_tlPort_0_a_bits_address),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_mask         (_v_tlPort_0_a_bits_mask),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_data         (_v_tlPort_0_a_bits_data),	// Cosimtop.scala:19:17
    .tlPort_0_a_bits_corrupt      (1'h0),	// Cosimtop.scala:20:17
    .tlPort_1_d_ready             (_v_tlPort_1_d_ready),	// Cosimtop.scala:19:17
    .tlPort_1_a_valid             (_v_tlPort_1_a_valid),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_opcode       (_v_tlPort_1_a_bits_opcode),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_param        (3'h0),	// Cosimtop.scala:20:17
    .tlPort_1_a_bits_size         (_v_tlPort_1_a_bits_size),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_source       (_v_tlPort_1_a_bits_source),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_address      (_v_tlPort_1_a_bits_address),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_mask         (_v_tlPort_1_a_bits_mask),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_data         (_v_tlPort_1_a_bits_data),	// Cosimtop.scala:19:17
    .tlPort_1_a_bits_corrupt      (1'h0),	// Cosimtop.scala:20:17
    .req_valid                    (_r_req_valid),
    .req_bits_inst                (_r_req_bits_inst),
    .req_bits_src1Data            (_r_req_bits_src1Data),
    .req_bits_src2Data            (_r_req_bits_src2Data),
    .csrInterface_vl              (_r_csrInterface_vl),
    .csrInterface_vStart          (_r_csrInterface_vStart),
    .csrInterface_vlmul           (_r_csrInterface_vlmul),
    .csrInterface_vSew            (_r_csrInterface_vSew),
    .csrInterface_vxrm            (_r_csrInterface_vxrm),
    .csrInterface_vta             (_r_csrInterface_vta),
    .csrInterface_vma             (_r_csrInterface_vma),
    .csrInterface_ignoreException (_r_csrInterface_ignoreException),
    .storeBufferClear             (_r_storeBufferClear),
    .tlPort_0_d_valid             (_r_tlPort_0_d_valid),
    .tlPort_0_d_bits_opcode       (_r_tlPort_0_d_bits_opcode),
    .tlPort_0_d_bits_param        (_r_tlPort_0_d_bits_param),
    .tlPort_0_d_bits_size         (_r_tlPort_0_d_bits_size),
    .tlPort_0_d_bits_source       (_r_tlPort_0_d_bits_source),
    .tlPort_0_d_bits_sink         (_r_tlPort_0_d_bits_sink),
    .tlPort_0_d_bits_denied       (_r_tlPort_0_d_bits_denied),
    .tlPort_0_d_bits_data         (_r_tlPort_0_d_bits_data),
    .tlPort_0_d_bits_corrupt      (_r_tlPort_0_d_bits_corrupt),
    .tlPort_0_a_ready             (_r_tlPort_0_a_ready),
    .tlPort_1_d_valid             (_r_tlPort_1_d_valid),
    .tlPort_1_d_bits_opcode       (_r_tlPort_1_d_bits_opcode),
    .tlPort_1_d_bits_param        (_r_tlPort_1_d_bits_param),
    .tlPort_1_d_bits_size         (_r_tlPort_1_d_bits_size),
    .tlPort_1_d_bits_source       (_r_tlPort_1_d_bits_source),
    .tlPort_1_d_bits_sink         (_r_tlPort_1_d_bits_sink),
    .tlPort_1_d_bits_denied       (_r_tlPort_1_d_bits_denied),
    .tlPort_1_d_bits_data         (_r_tlPort_1_d_bits_data),
    .tlPort_1_d_bits_corrupt      (_r_tlPort_1_d_bits_corrupt),
    .tlPort_1_a_ready             (_r_tlPort_1_a_ready)
  );
endmodule

